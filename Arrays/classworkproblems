//1Q-first and last occurance of a number
public class solution{
public static int firstIndex(int[] arr,int d){
for(int i=0;i<arr.length;i++){
if(arr[i]==d){
return i;
}
}
return -1;
}
public static int lastIndex(int[] arr,int d){
for(int i=arr.length-1;i>=0;i--){
if(arr[i]==d){
return i;
}
}
return -1;
}
public static void main(String[] args){
Scanner sc=new Scanner(System.in);
int n=sc.nextInt();
int []arr=new int[n];
for(int i=0;i<n;i++){
arr[i]=sc.nextInt();
}
int d=sc.nextInt();
System.out.println(firstIndex(arr,d));
System.out.println(lastIndex(arr,d));
}
}
--------------------------------------
//2Q-Print all the sub arrays of size n
public class Main {
    public static void main(String[] args) {
        int[] arr={1,2,3,4,5};
        subArray(arr);
    }
    static void subArray(int[] arr){
        for(int i=0;i<arr.length;i++){
            for(int j=i;j<arr.length;j++){
                for(int k=i;k<=j;k++){
                    System.out.print(arr[k]+" ");
                }
                System.out.println();
            }
        }
    }
}
---------------------------------------
3Q-print alternative array elemnts
import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int[] arr = new int[10];
        for(int i=0;i<arr.length;i++){
            arr[i]=sc.nextInt();
        }
        subArray(arr);
    }
    static void subArray(int[] arr){
        for(int i=0;i<arr.length;i+=2){
                System.out.println(arr[i]);
        }
    }
}
----------------------------------------------
4Q-count the odd number of pairs 
import java.util.*;
public class Main {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int[] arr ={1,2,3};

        countOddPairs(arr);
    }
    static void countOddPairs(int[] arr){
        for(int i=0;i<arr.length;i++){
            for(int j=0;j<arr.length;j++){
                if((arr[i]+arr[j])%2!=0){
                    System.out.println(arr[i]+" "+arr[j]);
                }
            }
        }
    }
}
----------------------------------------------------------------
2D Array
5Q-printAlternaterow
class HelloWorld {
    public static void main(String[] args) {
        int [][] arr={
            {1,2,3,4,5},
            {2,3,1,4,5},
            {45,6,7,8,9},
            {3,4,5,6,7},
        };
        for(int i=0;i<arr.length;i+=2){
            for(int j=0;j<arr[0].length;j++){
                    System.out.print(arr[i][j]+" ");
            }
            System.out.println();
        }
        }
    }
op-
1 2 3 4 5 
45 6 7 8 9 
------------------------------------------------------------------------
6Q printAlternatecolumns
class HelloWorld {
    public static void main(String[] args) {
        int [][] arr={
            {1,2,3,4,5},
            {2,3,1,4,5},
            {45,6,7,8,9},
            {3,4,5,6,7},
        };
        for(int j=0;j<arr[0].length;j+=2){
            for(int i=0;i<arr.length;i++){
                    System.out.print(arr[i][j]+" ");
            }
            System.out.println();
        }
        }
    }
output-1 2 45 3 
       3 1 7 5 
       5 5 9 7 
--------------------------------------------------------
7Q-Interchange the elemnts of fst and last row
import java.util.Arrays;
class HelloWorld {
    public static void main(String[] args) {
        int [][] arr={
            {1,2,3,4,5},
            {2,3,1,4,5},
            {45,6,7,8,9},
            {3,4,5,6,7},
        };
        int m=arr.length;
        int n=arr[0].length;
       for(int k=0;k<arr[0].length;k++)//for coulumns
       {
           int temp=arr[0][k];
           arr[0][k]=arr[m-1][k];
           arr[m-1][k]=temp;
       }
       for(int i=0;i<m;i++){
           for(int j=0;j<n;j++){
               System.out.print(arr[i][j]+" ");
           }
           System.out.println();
       }
        }
    }
op-
3 4 5 6 7 
2 3 1 4 5 
45 6 7 8 9 
1 2 3 4 5 
-------------------------------------------------------------
8Q-print lowerTriangular matrix
import java.util.Arrays;
class HelloWorld {
    public static void main(String[] args) {
        int [][] arr={
            {1,2,3,4,5},
            {2,3,1,4,5},
            {4,6,7,8,9},
            {3,4,5,6,7},
            {1,2,3,4,5},
        };
        for(int i=0;i<arr.length;i++){
              for(int j=0;j<arr[0].length;j++){
                  if(i<j){
                      System.out.print("0"+" ");
                  }
                  else{
                      System.out.print(arr[i][j]+" ");
                  }
              }
              System.out.println();
          }
        } }
op-
1 0 0 0 0 
2 3 0 0 0 
4 6 7 0 0 
3 4 5 6 0 
1 2 3 4 5 
-------------------------------------------------------------------------
9Q-printing pattern question
import java.util.Arrays;
class HelloWorld {
    public static void main(String[] args) {
        int [][] arr={
           {11,12,13,14},
           {21,22,23,24},
           {31,32,33,34},
        };
       
          for(int j=0;j<arr[0].length;j++){
              if(j%2==0){
                  for(int i=0;i<arr.length;i++){
                      System.out.print(arr[i][j]+" ");
                  }
                  System.out.println();
              }
              else{
                  for(int i=arr.length-1;i>=0;i--){
                      System.out.print(arr[i][j]+" ");
                  }
                  System.out.println();
              }
          }
        }
    }
op-
11 21 31 
32 22 12 
13 23 33 
34 24 14 
----------------------------------------------------------
10Q-Transpose of matrix
import java.util.Arrays;
//n*n size
class HelloWorld {
    public static void main(String[] args) {
        int [][] arr={
           {11,12,13,14},
           {21,22,23,15},
           {31,32,33,34},
           {1,2,3,4},
        };
int m=arr.length;
int n=arr[0].length;
      swap(arr,m,n);
      displayArray(arr,m,n);
        }
        public static void swap(int[][] arr,int m,int n){
             for(int i=1;i<m;i++){
                for(int j=0;j<i;j++){
                     int temp=arr[i][j];
            arr[i][j]=arr[j][i];
            arr[j][i]=temp;
          
                }
            }
        }
        public static void displayArray(int[][] arr,int m,int n){
            for(int i=0;i<m;i++){
                for(int j=0;j<n;j++){
                    System.out.print(arr[i][j]+" ");
                }
                System.out.println();
            }
        }
    }
op-
11 21 31 1 
12 22 32 2 
13 23 33 3 
14 15 34 4 
-----------------------------------------------------------------------------
11Q-saddleprice-min in row as well as max in col
class HelloWorld {
    public static void main(String[] args) {
    int[][] arr={
        {11,12,13,14},
        {21,22,23,24},
        {31,32,33,34},
        {41,42,43,44},
    };
    int n=arr.length;
    for(int i=0;i<n;i++){
        int min=arr[i][0];
        int col=0;
        boolean flag=true;
        for(int j=0;j<n;j++){
            if(min>arr[i][j]){
                min=arr[i][j];
                col=j;
            }
        }
        for(int k=0;k<n;k++){
            if(min<arr[k][col]){
                flag=false;
                break;
            }
        }
        if(flag==true){
            System.out.println(min);
            return;
        }  
  }
    System.out.println(-1);            
    }   
}
op-41
----------------------------------------------------------
12Q-matrix multiplication
class HelloWorld {
    public static void main(String[] args) {
    int[][] arr={
        {1,2},
        {2,1},

    };
    int [][] arr1={
        {1,2,3},
        {3,2,1},
    };
    matrixMul(arr,arr1);
    }
    static void matrixMul(int[][] arr,int[][] arr1){
        int n1=arr.length;
        int m1=arr[0].length;
        int n2=arr1.length;
        int m2=arr1[0].length;
        if(n2!=m1){
            System.out.println("Inavlid");
        }
        else{
            int[][] c=new int[n1][m2];
            for(int i=0;i<n1;i++){
                for(int j=0;j<m2;j++){
                    for(int k=0;k<n2;k++){
                        c[i][j]+=arr[i][k]*arr1[k][j];
                    }
                }
            }
            for(int i=0;i<n1;i++){
                for(int j=0;j<m2;j++){
                    System.out.print(c[i][j]+" ");
                }
                System.out.println();
            }
        }
    } 
    }
op-
7 6 5 
5 6 7 
-------------------------------------------------------------
13Q convert 1D array to 2D array
class HelloWorld {
    public static void main(String[] args) {
int a[]={1,2,3,4,5,6,7,8,9};
int count=0;
int p=3;
int q=3;
int[][] arr=new int[p][q];
for(int i=0;i<p;i++){
    for(int j=0;j<q;j++){
        arr[i][j]=a[count];
        count++;
            System.out.print(arr[i][j]+" ");
    }
    System.out.println();

     }
  }
}
op- 1 2 3
    4 5 6
    7 8 9
--------------------------------------------------------
14Q-shift matrix row wise
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int k=sc.nextInt();
        int[][] arr=new int[n][n];
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                arr[i][j]=sc.nextInt();
            }
        }
        k=k-1;
        shiftRowWise(arr,n,k);
}
 static void shiftRowWise(int[][] arr,int n,int k){
    for(int i=0;i<n;i++){
      reverse(arr,i,0,n-1);
      reverse(arr,i,0,k-1);
      reverse(arr,i,k,n-1);
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            System.out.print(arr[i][j]+" ");
        }
        System.out.println();
    }
 }
     static void reverse(int [][] arr,int row,int l,int r){
        int temp=arr[row][l];
        arr[row][l]=arr[row][r];
        arr[row][r]=temp;
        
        
    }    
}
op-
3
2
0 5 9 2 7 5 2 3 3
9 0 5 
5 2 7 
3 2 3 
----------------------------------------------------
15Q-modify the matrix
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int m=sc.nextInt();
        int n=sc.nextInt();
        int[][] arr=new int[m][n];
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                arr[i][j]=sc.nextInt();
            }
        }
        modifyTheMatrix(arr);
        
    }
    static void modifyTheMatrix(int[][] arr){
        int m=arr.length;
        int n=arr[0].length;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(arr[i][j]==1){
                    fillRowWithMinusOne(arr,i,j);
                }
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(arr[i][j]==-1){
                    arr[i][j]=1;
                }
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                System.out.print(arr[i][j]+" ");
            }
            System.out.println();
        }
        
    }
    static void fillRowWithMinusOne(int[][] arr,int row,int col){
        for(int j=0;j<arr[0].length;j++){
            if(arr[row][j]!=1){
                arr[row][j]=-1;
            }
        }
        for(int i=0;i<arr.length;i++){
            if(arr[i][col]!=1){
                arr[i][col]=-1;
            }
        }
    }
}

op-
1 1 1 1
1 1 1 1
1 0 1 1







